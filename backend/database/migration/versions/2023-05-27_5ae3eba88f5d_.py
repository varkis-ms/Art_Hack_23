"""empty message

Revision ID: 5ae3eba88f5d
Revises: 
Create Date: 2023-05-27 13:10:16.792920

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '5ae3eba88f5d'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('courses',
    sa.Column('course_id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('mongo_name', sa.VARCHAR(), nullable=False),
    sa.Column('name', sa.VARCHAR(), nullable=False),
    sa.PrimaryKeyConstraint('course_id', name=op.f('pk__courses')),
    sa.UniqueConstraint('mongo_name', name=op.f('uq__courses__mongo_name'))
    )
    op.create_table('user',
    sa.Column('id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('vk_id', sa.INTEGER(), nullable=True),
    sa.Column('login', sa.VARCHAR(), nullable=True),
    sa.Column('email', sa.VARCHAR(), nullable=True),
    sa.Column('email_verified', sa.BOOLEAN(), nullable=True),
    sa.Column('score', sa.INTEGER(), nullable=True),
    sa.Column('full_name', sa.VARCHAR(), nullable=True),
    sa.Column('displayed_name', sa.VARCHAR(), nullable=True),
    sa.Column('birthday', sa.DATE(), nullable=True),
    sa.Column('role', sa.VARCHAR(), nullable=False),
    sa.Column('allowed_to_create', sa.BOOLEAN(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk__user')),
    sa.UniqueConstraint('id', name=op.f('uq__user__id')),
    sa.UniqueConstraint('vk_id', name=op.f('uq__user__vk_id'))
    )
    op.create_index(op.f('ix__user__email'), 'user', ['email'], unique=True)
    op.create_index(op.f('ix__user__login'), 'user', ['login'], unique=True)
    op.create_table('access_to_courses',
    sa.Column('id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=True),
    sa.Column('course_id', sa.UUID(), nullable=True),
    sa.Column('dt_created', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True),
    sa.ForeignKeyConstraint(['course_id'], ['courses.course_id'], name=op.f('fk__access_to_courses__course_id__courses')),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name=op.f('fk__access_to_courses__user_id__user')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk__access_to_courses'))
    )
    op.create_table('auth_table_password',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('password', sa.VARCHAR(), nullable=False),
    sa.ForeignKeyConstraint(['id'], ['user.id'], name=op.f('fk__auth_table_password__id__user')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk__auth_table_password'))
    )
    op.create_table('friends',
    sa.Column('id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=True),
    sa.Column('friend_id', sa.UUID(), nullable=True),
    sa.Column('relation_type', sa.VARCHAR(), nullable=False),
    sa.ForeignKeyConstraint(['friend_id'], ['user.id'], name=op.f('fk__friends__friend_id__user')),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name=op.f('fk__friends__user_id__user')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk__friends'))
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('friends')
    op.drop_table('auth_table_password')
    op.drop_table('access_to_courses')
    op.drop_index(op.f('ix__user__login'), table_name='user')
    op.drop_index(op.f('ix__user__email'), table_name='user')
    op.drop_table('user')
    op.drop_table('courses')
    # ### end Alembic commands ###
