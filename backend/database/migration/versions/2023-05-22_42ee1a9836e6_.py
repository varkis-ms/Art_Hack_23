"""empty message

Revision ID: 42ee1a9836e6
Revises: 
Create Date: 2023-05-22 01:29:07.165444

"""
import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision = "42ee1a9836e6"
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "user",
        sa.Column(
            "id", sa.UUID(), server_default=sa.text("gen_random_uuid()"), nullable=False
        ),
        sa.Column("login", sa.VARCHAR(), nullable=True),
        sa.Column("email", sa.VARCHAR(), nullable=False),
        sa.Column("full_name", sa.VARCHAR(), nullable=True),
        sa.Column("displayed_name", sa.VARCHAR(), nullable=True),
        sa.Column("birthday", sa.DATE(), nullable=True),
        sa.Column("role", sa.VARCHAR(), nullable=False),
        sa.Column("allowed_to_create", sa.BOOLEAN(), nullable=False),
        sa.PrimaryKeyConstraint("id", name=op.f("pk__user")),
        sa.UniqueConstraint("id", name=op.f("uq__user__id")),
    )
    op.create_index(op.f("ix__user__email"), "user", ["email"], unique=True)
    op.create_index(op.f("ix__user__login"), "user", ["login"], unique=True)
    op.create_table(
        "auth_table_password",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("password", sa.VARCHAR(), nullable=False),
        sa.ForeignKeyConstraint(
            ["id"], ["user.id"], name=op.f("fk__auth_table_password__id__user")
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk__auth_table_password")),
    )
    op.create_table(
        "friends",
        sa.Column(
            "id", sa.UUID(), server_default=sa.text("gen_random_uuid()"), nullable=False
        ),
        sa.Column("user_id", sa.UUID(), nullable=True),
        sa.Column("friend_id", sa.UUID(), nullable=True),
        sa.Column("relation_type", sa.VARCHAR(), nullable=False),
        sa.ForeignKeyConstraint(
            ["friend_id"], ["user.id"], name=op.f("fk__friends__friend_id__user")
        ),
        sa.ForeignKeyConstraint(
            ["user_id"], ["user.id"], name=op.f("fk__friends__user_id__user")
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk__friends")),
    )
    op.create_table(
        "topics",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("name", sa.VARCHAR(), nullable=True),
        sa.ForeignKeyConstraint(["id"], ["user.id"], name=op.f("fk__topics__id__user")),
        sa.PrimaryKeyConstraint("id", name=op.f("pk__topics")),
    )
    op.create_table(
        "educational_content",
        sa.Column(
            "id", sa.UUID(), server_default=sa.text("gen_random_uuid()"), nullable=False
        ),
        sa.Column("related_topics", sa.UUID(), nullable=True),
        sa.Column("name", sa.VARCHAR(), nullable=False),
        sa.Column("content", sa.VARCHAR(), nullable=True),
        sa.Column("private", sa.BOOLEAN(), nullable=False),
        sa.ForeignKeyConstraint(
            ["related_topics"],
            ["topics.id"],
            name=op.f("fk__educational_content__related_topics__topics"),
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk__educational_content")),
    )
    op.create_table(
        "interests",
        sa.Column(
            "id", sa.UUID(), server_default=sa.text("gen_random_uuid()"), nullable=False
        ),
        sa.Column("user_id", sa.UUID(), nullable=True),
        sa.Column("topic_id", sa.UUID(), nullable=True),
        sa.ForeignKeyConstraint(
            ["topic_id"], ["topics.id"], name=op.f("fk__interests__topic_id__topics")
        ),
        sa.ForeignKeyConstraint(
            ["user_id"], ["user.id"], name=op.f("fk__interests__user_id__user")
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk__interests")),
    )
    op.create_table(
        "section",
        sa.Column("section_id", sa.UUID(), nullable=False),
        sa.Column("name", sa.VARCHAR(), nullable=True),
        sa.Column("content_id", sa.UUID(), nullable=True),
        sa.ForeignKeyConstraint(
            ["content_id"],
            ["educational_content.id"],
            name=op.f("fk__section__content_id__educational_content"),
        ),
        sa.PrimaryKeyConstraint("section_id", name=op.f("pk__section")),
        sa.UniqueConstraint("section_id", name=op.f("uq__section__section_id")),
    )
    op.create_table(
        "access_to_material",
        sa.Column(
            "id", sa.UUID(), server_default=sa.text("gen_random_uuid()"), nullable=False
        ),
        sa.Column("user_id", sa.UUID(), nullable=True),
        sa.Column("section_id", sa.UUID(), nullable=True),
        sa.ForeignKeyConstraint(
            ["section_id"],
            ["section.section_id"],
            name=op.f("fk__access_to_material__section_id__section"),
        ),
        sa.ForeignKeyConstraint(
            ["user_id"], ["user.id"], name=op.f("fk__access_to_material__user_id__user")
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk__access_to_material")),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("access_to_material")
    op.drop_table("section")
    op.drop_table("interests")
    op.drop_table("educational_content")
    op.drop_table("topics")
    op.drop_table("friends")
    op.drop_table("auth_table_password")
    op.drop_index(op.f("ix__user__login"), table_name="user")
    op.drop_index(op.f("ix__user__email"), table_name="user")
    op.drop_table("user")
    # ### end Alembic commands ###
